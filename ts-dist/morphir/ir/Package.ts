// Generated by morphir-elm

import { Morphir_IR_AccessControlled_AccessControlled } from "../../morphir/ir/AccessControlled"
import { Morphir_IR_Module_Definition } from "../../morphir/ir/Module"
import { Morphir_IR_Module_ModuleName } from "../../morphir/ir/Module"
import { Morphir_IR_Module_Specification } from "../../morphir/ir/Module"
import { Morphir_IR_Path_Path } from "../../morphir/ir/Path"

/* Type that represents a package definition. A package definition contains all the details including implementation
and private types and values. The modules field is a dictionary keyed by module name that contains access controlled
module definitions. The `AccessControlled` adds access classifiers to each module to differentiate public and private
modules.
*/
export type Morphir_IR_Package_Definition<ta, va> = {
  Modules: Array<[Morphir_IR_Module_ModuleName, Morphir_IR_AccessControlled_AccessControlled<Morphir_IR_Module_Definition<ta, va>>]>;
}

/* A package name is a globally unique identifier for a package. It is represented by a path, which is a list of names.
*/
export type Morphir_IR_Package_PackageName = Morphir_IR_Path_Path

/* Type that represents a package specification. A package specification only contains types that are exposed publicly
and type signatures for values that are exposed publicly.
*/
export type Morphir_IR_Package_Specification<ta> = {
  Modules: Array<[Morphir_IR_Module_ModuleName, Morphir_IR_Module_Specification<ta>]>;
}
